stages:
  - build-and-test

# doesn't clone submodules otherwise
variables:
  GIT_SUBMODULE_STRATEGY: recursive

pi-cross-compile:
  stage: build-and-test
  dependencies: []
  image: wpilib/raspbian-cross-ubuntu:bullseye-22.04
  before_script: # for some reason ubuntu 22.04 doesn't use GCC 12 by default (it's on GCC 11), but provides it through packages
  - apt-get update --yes
  - apt install --yes gcc-12
  - apt install --yes g++-12
  script:
    - export CC=gcc-12 CXX=g++-12 # the GCC 12 binaries are named gcc-12 and g++12, we set them as the default compiler for CMake to use
    - cmake -B build-pi -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=CMake/arm-pi-gnueabihf.toolchain.cmake
    - cmake --build build-pi --target ecs_pi -- -j 8
    - echo "Build successful!"
    - echo "Not testing, not possible with Docker"
  artifacts:
    paths:
      - build-pi/ecs_pi

sim-windows:
  stage: build-and-test
  dependencies: []
  tags:
    - windows
  before_script:
    - choco install -y cmake
    - $env:Path += ';C:\Program Files\CMake\bin'
  script:
    - cmake -B build
    - cmake --build build --target ecs_sim
    - echo "Build successful!"

    - cmake --build build --target all_tests
    - build/catch_tests/Debug/all_tests # yeah fucking cringe, the random ass Debug folder
  rules: # Currently only running windows builds on MRs to reduce build time
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'


sim-linux-clang:
  stage: build-and-test
  dependencies: []
  image: silkeh/clang
  before_script:
    - apt-get update --yes
    - apt-get install --yes cmake
  script:
    - cmake -B build
    - cmake --build build --target ecs_sim
    - echo "Build successful!"

    - cmake --build build --target all_tests
    - build/catch_tests/all_tests

sim-linux-gcc:
  stage: build-and-test
  dependencies: []
  image: gcc
  before_script:
    - apt-get update --yes
    - apt-get install --yes cmake
  script:
    - cmake -B build
    - cmake --build build --target ecs_sim
    - echo "Build successful!"

    - cmake --build build --target all_tests
    - build/catch_tests/all_tests


